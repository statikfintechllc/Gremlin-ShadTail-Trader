#!/bin/bash

# install-all script for Gremlin ShadTail Trader
# This script installs all dependencies for the monorepo

set -e  # Exit on any error

echo "ðŸš€ Installing Gremlin ShadTail Trader dependencies..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if Node.js is installed
if ! command -v node &> /dev/null; then
    print_error "Node.js is not installed. Please install Node.js (version 18 or higher)"
    exit 1
fi

# Check if npm is installed
if ! command -v npm &> /dev/null; then
    print_error "npm is not installed. Please install npm"
    exit 1
fi

# Check if Python is installed
if ! command -v python3 &> /dev/null; then
    print_error "Python 3 is not installed. Please install Python 3.11 or higher"
    exit 1
fi

# Check if Poetry is installed
if ! command -v poetry &> /dev/null; then
    print_warning "Poetry is not installed. Installing Poetry..."
    curl -sSL https://install.python-poetry.org | python3 -
    export PATH="$HOME/.local/bin:$PATH"
fi

# Get the directory where this script is located
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

cd "$PROJECT_ROOT"

print_status "Installing root dependencies..."
npm install

print_status "Installing frontend dependencies..."
cd frontend
npm install
cd ..

print_status "Installing backend dependencies..."
cd backend
poetry install --no-root
cd ..

print_success "All dependencies installed successfully!"

print_status "Building the application..."
npm run build

if [ $? -eq 0 ]; then
    print_success "Application built successfully!"
else
    print_error "Build failed! Please check the error messages above."
    exit 1
fi

print_status "Available scripts:"
echo "  npm run dev              - Start all services in development mode"
echo "  npm run build            - Build the application"
echo "  npm run start            - Start the built application"
echo "  npm run dev:backend      - Start only the backend"
echo "  npm run dev:frontend     - Start only the frontend"
echo "  npm run dev:electron     - Start only Electron"
echo "  ./scripts/start-app      - Smart start (detects environment)"

print_status "To get started:"
echo "  1. Run './scripts/start-app' for intelligent startup"
echo "  2. Or run 'npm run start' to start the built application"
echo "  3. Or run 'npm run dev' to start in development mode"
echo "  4. Open http://localhost:4321 in your browser (dev mode)"
echo "  5. Or wait for the Electron window to open automatically"

print_success "Setup complete! Application is built and ready to run! ðŸ“ˆ"